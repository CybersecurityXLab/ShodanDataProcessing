# Author: Dr. X
# look for specific model exploits
# count how many exploits of a specific type
# ideally this should be done daily or for historical data

import shodan
import datetime
import csv

SHODAN_API_KEY = "n7voYT0TVVzZGVSLaQNRnnkkWgVqxA3b"

api = shodan.Shodan(SHODAN_API_KEY)

# Wrap the request in a try/ except block to catch errors
# improvements: read devices from a file
# webcams = ['TP-Link', 'axis', 'D-Link', 'Dericam', 'Foscam', 'Icam', 'KaiKong', 'Loftek', 'Coolcam', 'Netcam', 'Panasonic', 'Polaroid', 'Pyle', 'Safehome', 'Sricam', 'Vstarcam', 'Wanscam']
# routers = ['netgear', 'linksys', 'Asus', 'Tenda']
# assistants = ['Amazon Echo', 'Google Home']
# printers = ['Brother', 'HP OfficeJet', 'HP LaserJet', 'Canon', 'Epson']
# # lights = ['', 'router', 'Amazon Echo', 'printer', 'light']
# exploits_type = ['dos', 'local', 'remote', 'webapps']
# exploits_platform = ['windows', 'php', 'linux', 'hardware']
input_file_devices = 'devices.csv'
devices_data = dict()
with open(input_file_devices, 'r') as csv_file:
    reader = csv.reader(csv_file)
    for row in reader:
        devices_data[row[0]] = (row[1:])

input_file_exploits = 'exploits.csv'
exploits_data = dict()
with open(input_file_exploits, 'r') as csv_file:
    reader = csv.reader(csv_file)
    for row in reader:
        exploits_data[row[0]] = (row[1:])

file_name = 'exploits' + str(datetime.datetime.now()) +'.txt'
f = open(file_name, 'w')

# # change list for every run
for dev_item in devices_data:
    #          # Search Shodan
    f.write('Searching for '+ dev_item)
    for model in devices_data[dev_item]:
        f.write(' and model:' + model + '\n')
        for exp_item in exploits_data:
            if (exp_item == 'exploits_type'):
                for exp_type in exploits_data[exp_item]:
                    f.write('=================================================================================\n')
                    f.write('exploit search ' + exp_type + '\n')
                    f.write('=================================================================================\n')
                    # Wrap the request in a try/ except block to catch errors
                    try:
                        # Search Shodan
                        exploits = api.exploits.search(model + ' type:' + exp_type)
                        #windows = api.exploits.search(device + ' type:'+ type + ' platform:windows')
                        #linux = api.exploits.search(device + ' type:'+ type + ' platform:linux')
                        #hardware = api.exploits.search(device + ' type:'+ type + ' platform:hardware')

                        # Show the results
                        f.write('Exploits found: {}'.format(exploits['total']) + '\n')
                        #print('Windows found: {}'.format(windows['total']))
                        #print('Linux found: {}'.format(linux['total']))
                        #print('Hardware found: {}'.format(hardware['total']))
                        for exploit in exploits['matches']:
                            f.write('CVE: {}'.format(exploit['cve']) + '\n')
                            f.write('Description: {}'.format(exploit['description']) + '\n')
                            f.write('Platform: {}'.format(exploit['platform']) + '\n')
                            #print(exploit)
                    except Exception as e:
                        print(e)

f.close()
